  main:
    params: [event]
    steps:
        - init:
            assign:
                - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
        - log_event:
            call: sys.log
            args:
                text: ${event}
                severity: INFO
        - extract_bucket_object:
            assign:
            - bucket: ${event.data.bucket}
            - object: ${event.data.name}
            - md5hash: ${event.data.md5Hash}
        - VirusTotal_scan:
            call: http.post
            args:
              url: https://ruby-virus-scan-yspciwmbia-uc.a.run.app
              body: 
                bucket: ${bucket}
                object: ${object}
                md5hash: ${md5hash}
            result: api_response1
        - log_api_response1:
            call: sys.log
            args:
              json: ${api_response1}
        - extract_score:
            assign:
              - score: ${api_response1.body.score}
        - where_to_jump:
            switch:
                - condition: ${int(score) < 0}
                  next: create_callback
                - condition: ${int(score) >= 0}
                  next: move_file
            next: end
        - create_callback:
            call: events.create_callback_endpoint
            args:
                http_callback_method: "POST"
            result: callback_details
        - print_callback_details:
            call: sys.log
            args:
                severity: "INFO"
                text: ${"Listening for callbacks on " + callback_details.url}
        - trigger_job:
            call: http.post
            args:
              url: https://trigger-job-yspciwmbia-uc.a.run.app
              body:
                 bucket: ${bucket}
                 object: ${object}
                 callback_url: ${callback_details.url}
            result: trigger_execution
        - await_callback:
            call: events.await_callback
            args:
                callback: ${callback_details}
                timeout: 3600
            result: callback_request
        - print_callback_request:
            call: sys.log
            args:
                severity: "INFO"
                text: ${"Received " + json.encode_to_string(callback_request.http_request)}
        - extract_new_score:
            assign:
              - new_score: ${callback_request.http_request.body.score}
        - private_move_file:
            call: http.post
            args:
              url: https://ruby-move-file-yspciwmbia-uc.a.run.app
              body: 
                score:  ${new_score}
                bucket: ${bucket}
                object: ${object}
            result: move_status
        - return_move_status:
            return: ${move_status}
        - move_file:
            call: http.post
            args:
              url: https://ruby-move-file-yspciwmbia-uc.a.run.app
              body: 
                score:  ${score}
                bucket: ${bucket}
                object: ${object}
            result: file_status
        - return_message:
            return: ${file_status}
